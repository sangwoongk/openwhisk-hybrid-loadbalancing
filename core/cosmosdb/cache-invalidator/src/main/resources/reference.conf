#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

whisk {
  cache-invalidator {
    cosmosdb {
      # Endpoint URL like https://<account>.documents.azure.com:443/
      endpoint            = ${?COSMOSDB_ENDPOINT}
      # Access key
      key                 = ${?COSMOSDB_KEY}
      # Database name
      db                  = ${?COSMOSDB_NAME}

      # Name of collection in which lease related data is stored
      lease-collection    = "cache-invalidator-lease"

      # Feed processor host name
      # If multiple instance running then set it to some unique name
      hostname            = "cache-invalidator"

      collections {
        # Provide collection specific connection info here
        # This can be used if lease collection is to be placed in a separate endpoint/db
        # - whisks
        # - subjects
      }
    }
    # HTTP Server port
    port = 8080

    # Timeout for waiting for batch of feed changes to be published as Kafka event
    feed-publish-timeout = 120 s

    # Current clusterId - If configured then changes which are done by current cluster would be ignored
    # i.e. no cache invalidation event message would be generated for those changes
    # cluster-id =

    event-producer {
      # Queue size in KafkaEventProducer to hold cache invalidation message bfore flushing them to Kafka
      buffer-size = 100
    }
  }
}
